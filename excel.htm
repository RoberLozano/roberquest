<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Cargar Excel</title>
</head>

<body>
    <input type="file" id="fileUpload" />
    <input type="button" id="upload" value="Cargar" onclick="Upload()" />
    <hr />
    <div id="dvExcel">
    </div>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>

    <!-- TODOS LOS SCRIPTS -->
    <script src='js/D.js'></script>
    <script src='js/habilidades.js'></script>
    <script src='js/inventario.js'></script>
    <script src='js/localizaciones.js'></script>
    <script src='js/coor.js'></script>

    <script src='js/rol.js'></script>

    <script type="text/javascript">
        var ws;//el worksheet
        function Upload() {
            //Reference the FileUpload element.
            var fileUpload = document.getElementById("fileUpload");

            //Validate whether File is valid Excel file.
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|xlsx|xlsm|)$/;
            // if (regex.test(fileUpload.value.toLowerCase())) {
            if (true) {

                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();

                    //For Browsers other than IE.
                    if (reader.readAsBinaryString) {
                        reader.onload = function (e) {
                            ProcessExcel(e.target.result);
                        };
                        reader.readAsBinaryString(fileUpload.files[0]);
                    } else {
                        //For IE Browser.
                        reader.onload = function (e) {
                            var data = "";
                            var bytes = new Uint8Array(e.target.result);
                            for (var i = 0; i < bytes.byteLength; i++) {
                                data += String.fromCharCode(bytes[i]);
                            }
                            ProcessExcel(data);
                        };
                        reader.readAsArrayBuffer(fileUpload.files[0]);
                    }
                } else {
                    alert("This browser does not support HTML5.");
                }
            } else {
                alert("Please upload a valid Excel file.");
            }
        };
        function ProcessExcel(data) {
            //Read the Excel File data.
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //Fetch the name of First Sheet.
            var firstSheet = workbook.SheetNames[0];
            console.log(workbook.SheetNames);

            //Read all rows from First Sheet into an JSON array.
            // var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);
            ws = workbook.Sheets[firstSheet];
            // console.log('B1');
            // console.log(ws['agilidad']);

            console.log(XLSX.utils.decode_cell('B1'));
            let s = XLSX.utils.decode_cell('A1');
            let e = XLSX.utils.decode_cell('B8');

            var range = { s, e };
            // var range = { s: { c: 0, r: 0 }, e: { c: 0, r: 4 } };

            // for (var R = range.s.r; R <= range.e.r; ++R) {
            //     for (var C = range.s.c; C <= range.e.c; ++C) {
            //         var cell_address = { c: C, r: R };
            //         var data = XLSX.utils.encode_cell(cell_address);
            //         console.log(ws[data]?.v)
            //     }
            // }
            
            h(22, 86);
            tipo = Magia;
            ws = workbook.Sheets['Magia'];
            h(5, 45);
            tipo=Manipulación;
            ws = workbook.Sheets['Armas'];
            h(2, 11);



        };
        var tipo = Agilidad;
        function h(inicio, fin) {
            let hab = new Habilidad();

            for (let i = inicio; i < fin; i++) {
                let nombre = ws['A' + i]?.v;
                if(!nombre) continue;
                if(nombre.length<2) continue;
                if (nombre.toUpperCase().startsWith("HABILIDADES DE ")) {       //si empieza por "HABILIDADES DE " sin que importen las mayúsculas
                    nombre = nombre.replace(/habilidades de /gi, "");// guardo solo el tipo de habilidad sin que importen las mayúsculas
                    tipo = nombre.charAt(0).toUpperCase() + nombre.toLowerCase().slice(1);                  // 1 en mayusculas
                    continue;
                    }
                hab = new Habilidad(ws['A' + i]?.v, tipo, ws['C' + i]?.v);
                hab.xp = ws['B' + i]?.v
                // console.log(ws['A' + i]?.v, ws['B' + i]?.v, ws['C' + i]?.v);
                console.log(nombre,hab);
            }
        }

    </script>
</body>

</html>